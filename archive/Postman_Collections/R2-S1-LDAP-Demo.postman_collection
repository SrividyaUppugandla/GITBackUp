{
	"id": "497f7aa2-a5a5-4ca5-c2a3-89cdfad810a3",
	"name": "R2-S1 LDAP - Demo",
	"description": "",
	"order": [
		"3ba0d215-ea15-74c4-9d2b-d7e358e972a7",
		"3bb6ba0c-1b49-25d8-0eec-7d370d96c082",
		"8f2118a2-d1bd-e9c1-8d20-35b891b634bb",
		"548ba06a-737a-7c95-031f-23a9351780b2"
	],
	"folders": [],
	"timestamp": 1470209037733,
	"owner": 0,
	"public": false,
	"published": false,
	"requests": [
		{
			"id": "3ba0d215-ea15-74c4-9d2b-d7e358e972a7",
			"headers": "token: {{token}}\nContent-Type: application/json\n",
			"url": "http://{{host}}.{{domain}}/generateOtp",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "//console.log(\"Authorizaton-\"+responseCode.code)\r\nif(responseCode.code == 303){\r\n    var data = JSON.parse(responseBody);\r\n    \r\n    if(data.token === undefined){\r\n        tests[\"OTP Code is not available\"] = false;\r\n    }else{\r\n        tests[\"OTP Code is available\"] = true;\r\n        postman.setEnvironmentVariable(\"token\", data.token); \r\n    }\r\n}else if(responseCode.code >= 400 && responseCode.code < 500){\r\n     var error = JSON.parse(responseBody);\r\n    tests[\"Authorizaton server error(\"+error.description+\")\"] = false; \r\n}else{\r\n    tests[\"Authorization server error\"] = false; \r\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1473754323095,
			"name": "2.GenerateOTP via Sendgrid",
			"description": "",
			"collectionId": "497f7aa2-a5a5-4ca5-c2a3-89cdfad810a3",
			"responses": [],
			"rawModeData": "{ \"toRecipient\": {{toreceipient}},\n    \"fromMail\": {{frommail}}\n}"
		},
		{
			"id": "3bb6ba0c-1b49-25d8-0eec-7d370d96c082",
			"headers": "Content-Type: application/json\ntoken: {{token}}\n",
			"url": "http://{{host}}.{{domain}}/validateOtp",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "//console.log(\"Authorizaton-\"+responseCode.code)\r\nif(responseCode.code == 303){\r\n    var data = JSON.parse(responseBody);\r\n    \r\n    if(data.token === undefined){\r\n        tests[\"OTP Code is not available\"] = false;\r\n    }else{\r\n        tests[\"OTP Code is available\"] = true;\r\n        postman.setEnvironmentVariable(\"token\", data.token); \r\n    }\r\n}else if(responseCode.code >= 400 && responseCode.code < 500){\r\n     var error = JSON.parse(responseBody);\r\n    tests[\"Authorizaton server error(\"+error.description+\")\"] = false; \r\n}else{\r\n    tests[\"Authorization server error\"] = false; \r\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1473762573320,
			"name": "3. Validate Otp",
			"description": "",
			"collectionId": "497f7aa2-a5a5-4ca5-c2a3-89cdfad810a3",
			"responses": [],
			"rawModeData": "{\n    \"otpCode\":\"3466\"\n}"
		},
		{
			"id": "548ba06a-737a-7c95-031f-23a9351780b2",
			"headers": "token: {{token}}\ndn: cn=santhosh,dc=people,dc=cts\npassword: password-1\nContent-Type: application/json\n",
			"url": "http://{{host}}.{{domain}}/ldap",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "//console.log(\"Authorizaton-\"+responseCode.code)\r\nif(responseCode.code == 303){\r\n    var data = JSON.parse(responseBody);\r\n    \r\n    if(data.token === undefined){\r\n        tests[\"OTP Code is not available\"] = false;\r\n    }else{\r\n        tests[\"OTP Code is available\"] = true;\r\n        postman.setEnvironmentVariable(\"token\", data.token); \r\n    }\r\n}else if(responseCode.code >= 400 && responseCode.code < 500){\r\n     var error = JSON.parse(responseBody);\r\n    tests[\"Authorizaton server error(\"+error.description+\")\"] = false; \r\n}else{\r\n    tests[\"Authorization server error\"] = false; \r\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1473762398592,
			"name": "4. /ldap - Provider call",
			"description": "4. /ldap - Provider call",
			"collectionId": "497f7aa2-a5a5-4ca5-c2a3-89cdfad810a3",
			"rawModeData": ""
		},
		{
			"id": "8f2118a2-d1bd-e9c1-8d20-35b891b634bb",
			"headers": "apiKey: {{apikey}}\n",
			"url": "http://{{host}}.{{domain}}/auth/ldap",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "//console.log(\"Authorizaton-\"+responseCode.code)\r\nif(responseCode.code == 303){\r\n    var data = JSON.parse(responseBody);\r\n    \r\n    if(data.token === undefined){\r\n        tests[\"Access token is not available\"] = false;\r\n    }else{\r\n        tests[\"Access token is available\"] = true;\r\n        postman.setEnvironmentVariable(\"token\", data.token); \r\n    }\r\n}else if(responseCode.code >= 400 && responseCode.code < 500){\r\n     var error = JSON.parse(responseBody);\r\n    tests[\"Authorizaton server error(\"+error.description+\")\"] = false; \r\n}else{\r\n    tests[\"Authorization server error\"] = false; \r\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1473761969434,
			"name": "1. /auth/ldap",
			"description": "1. LDAP",
			"collectionId": "497f7aa2-a5a5-4ca5-c2a3-89cdfad810a3",
			"responses": [],
			"rawModeData": ""
		}
	]
}